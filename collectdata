#!/bin/bash

clear
#This script will allow you to collect Lidar, image, and vector-nav data.

#This defines the folder and name of the csv file for the LIDAR
#it must take the following format "/another/random/dir/somename.csv" <- WITH QUOTATIONS
LIDARLOC="data_storage"
LIDARPROG="get_multiecho_intensity"
LIDARPS=$(expr substr $LIDARPROG 1 15)
LIDARINFO="sensor_parameter"
LIDARPROGDIR="urg_library-1.1.3/samples/c"

#this defines the folder where the pictures are located,
#it must take the following format "/some/random/dir/"
PICLOC="data_storage/pics"
PICPROG="CustomImageEx"
PICPS=$(expr substr $PICPROG 1 15)
echo $PICPS
PICPROGDIR="flycapture.2.6.3.4_armhf/bin"

#this defines the folder where the vector-nav data is being held
#it must take the following
VNLOC="data_storage"
VNPROG="vn200_linux_binary_async"
VNPS=$(expr substr $VNPROG 1 15)
VNPROGDIR="vnccpplib-0.3.2/examples/vn200_linux_binary_async"

# trap ctrl-c so processes are killed with the menu task
trap ctrlc SIGINT SIGQUIT SIGTSTP
function ctrlc() {
    clear
    echo -e "Killing Background Tasks...\n"
    
    killProg $LIDARPROG
    killProg $PICPROG
    killProg $VNPROG
    
    exit 0
}

function running()
{
    echo "$(pidof $1)"
}



# translate function
function translateProg()
{
    
    local string=$( echo $1 | sed -e "s:$VNPROG:VectorNav:" -e "s:$LIDARPROG:LIDAR:" -e "s:$PICPROG:Camera:" )
    echo $string
}

# define kill functions
function killProg()
{
    local prog=$( translateProg $1 )
    echo -e "Killing $prog"
    local pid=$(pidof $1)
    if [[ $pid ]]; then
        kill $pid 
        wait $pid >/dev/null 2>&1
    else
        echo -e "$prog not running\n"
    fi
}

# define display functions

function displayLidar()
{
    clear
    trap ctrlc2 INT
    tail -n 1 -f "${LIDARLOC}/lidar_data.csv"
    trap ctrlc SIGINT SIGQUIT SIGTSTP
}

function displayImages()
{
    trap ctrlc2 INT
    echo "Not Competed"
    sleep 2
    trap ctrlc SIGINT SIGQUIT SIGTSTP
}

function displayVectorNav()
{   
    clear
    trap ctrlc2 INT
    tail -n 1 -f "${VNLOC}/vn.csv"
    trap ctrlc SIGINT SIGQUIT SIGTSTP
}

function displayRunning()
{
    #echo "($VNPS|$LIDARPS|$PICPS)"
    if [[ $( ps -o comm | egrep "($VNPS|$LIDARPS|$PICPS)" ) ]]; then
        ps -o comm | egrep "($VNPS|$LIDARPS|$PICPS)" | sed -e "s:$VNPS:VectorNav:" -e "s:$LIDARPS:LIDAR:" -e "s:$PICPS:Camera:" 
    else
        echo -e "Programs not running"
    fi
}




# Create directories if needed
if [[ ! -d $LIDARLOC ]]; then
    mkdir -p $LIDARLOC
fi
if [[ ! -d $PICLOC ]]; then
    mkdir -p $PICLOC
fi
if [[ ! -d $VNLOC ]]; then
    mkdir -p $VNLOC
fi

function ctrlc2 { 
    echo -e "\nBack to main menu...\n"
    trap ctrlc INT
}


# Main Menu
HELP="\nMichiganTech Intelligent Robotics Laboratory Data Logger Menu:\n
	0 - Exit Data Logger
	
	1 - Start Lidar Logger
	2 - Start Camera Logger
	3 - Start VectorNav Logger
	
	4 - Stop Lidar Logger
	5 - Stop Camera Logger
	6 - Stop VectorNav Logger
	
	7 - Display lidar data stream (Ctrl-C to exit)
	8 - Display Camera Images (Requires SSH X-Forwarding)
	9 - Display VectorNav data stream (Ctrl-C to exit)"




# Command Menu 
while [ 1 ]; do
    clear

    # Display Background Processes
    echo -e "Running Programs"
    echo "==============="
    displayRunning
    echo -e "===============\n"

    # Show Menu
    echo -e "$HELP"
    read cmd
    

    case "$cmd" in
        # Exit Datalogger
        0)
            echo "Thank you for using the MichiganTech IRL data logger!"
            ctrlc
        ;;
        
        # Start logging
        1)
            if [[ -x $LIDARPROGDIR/$LIDARINFO && -x $LIDARPROGDIR/$LIDARPROG ]]; then
                echo "Starting Lidar Logger"
                $LIDARPROGDIR/$LIDARINFO -e 192.168.0.10 >| "${LIDARLOC}/lidar_info.txt" 
                sleep 1
                $LIDARPROGDIR/$LIDARPROG -e 192.168.0.10 >| "${LIDARLOC}/lidar_data.csv" &
            else
                echo -e "LIDAR Programs not found or they can not be run"
            fi
            sleep 2
        ;;
        2)

            if [[ $(uname -m) == "arm*" && -x $PICPROGDIR/$PICPROG ]]; then
                echo "Starting Camera Logger"
                $PICPROGDIR/$PICPROG ${PICLOC} > ${PICLOC}/caminfo &
            else
                echo -e "Camera Program not found or it can not be run\n"
            fi
            sleep 2
        ;;
        3)
            if [[ -x $VNPROGDIR/$VNPROG ]]; then
                echo "Starting VectorNav Logger"
                $VNPROGDIR/$VNPROG > ${VNLOC}/vn.csv &
            else
                echo -e "VectorNav Program not found or it can not be run\n"
            fi
            sleep 2
        ;;
        
        # Stop Logging
        4)
            echo "Stopping Lidar Logger"
            killProg $LIDARINFO
            killProg $LIDARPROG
            sleep 2
        ;;
        5)
            echo "Stopping Camera Logger"
            killProg $PICPROG
            killProg "python"
            sleep 2
        ;;
        6)
            echo "Stopping VectorNav Logger"
            killProg $VNPROG
            sleep 2
        ;;
        
        # Displays
        7)
            echo "Displaying Lidar data"
            displayLidar
        ;;
        8)
            echo "Displaying Camera data"
            displayImages
        ;;
        9)
            echo "Displaying Lidar data"
            displayVectorNav
        ;;
        
    esac
    
done

ctrlc
