#!/bin/bash

# This script will allow you to collect Lidar, image, and vector-nav data.


# Define the directory for the lidar data
LIDARLOC="data_storage"

# Define the directory for the camera images 
PICLOC="data_storage/pics"

# Define the directory for the VectorNav data
VNLOC="data_storage"


# Create directories if needed
if [ ! -d $LIDARLOC ]; then
    mkdir -p $LIDARLOC
fi
if [ ! -d $PICLOC ]; then
    mkdir -p $PICLOC
fi
if [ ! -d $VNLOC ]; then
    mkdir -p $VNLOC
fi


# trap ctrl-c so processes are killed with the menu task
trap ctrlc INT
function ctrlc {
	echo -e "Killing Background Tasks...\n"
	kill $(pidof vn200_linux_binary_async)
	kill $(pidof CustomImageEx)
	kill $(pidof get_multiecho_intensity)
	kill $(pidof sensor_parameter)
	exit 0
}
function ctrlc2 { 
	echo -e "\nBack to main menu...\n"
	trap ctrlc INT
}


# Main Menu
HELP="\nMichiganTech Intelligent Robotics Laboratory Data Logger Menu:\n
	0 - Exit Data Logger
	
	1 - Start Lidar Logger
	2 - Start Camera Logger
	3 - Start VectorNav Logger
	
	4 - Stop Lidar Logger
	5 - Stop Camera Logger
	6 - Stop VectorNav Logger
	
	7 - Display lidar data stream (Ctrl-C to exit)
	8 - Display Camera Images (Requires SSH X-Forwarding)
	9 - Display VectorNav data stream (Ctrl-C to exit)"




# Command Menu 
while [ 1 ]; do

	# Display Background Processes
	echo -e "\n"
	ps
	
	# Show Menu
	echo -e "$HELP"
    read cmd
	

	case "$cmd" in
		# Exit Datalogger
		0)
			echo "Thank you for using the MichiganTech IRL data logger!"
			ctrlc
		;;
		
		# Start logging
		1)
			echo "Starting Lidar Logger"
			urg_library-1.1.3/samples/c/sensor_parameter -e 192.168.0.10 > "${LIDARLOC}/lidar_info.txt" 
			sleep 1
			urg_library-1.1.3/samples/c/get_multiecho_intensity -e 192.168.0.10 > "${LIDARLOC}/lidar_data.csv" &
			sleep 2
		;;
		2)
			echo "Starting Camera Logger"
			flycapture.2.6.3.4_armhf/bin/CustomImageEx "${PICLOC}/" > "${PICLOC}/caminfo" &
			sleep 2
		;;
		3)
			echo "Starting VectorNav Logger"
			vnccpplib-0.3.2/examples/vn200_linux_binary_async/vn200_linux_binary_async > "${VNLOC}/vn.csv" &
			sleep 2
		;;
		
		# Stop Logging
		4)
			echo "Stopping Lidar Logger"
			kill $(pidof sensor_parameter)
			kill $(pidof get_multiecho_intensity)
			sleep 2
		;;
		5)
			echo "Stopping Camera Logger"
			kill $(pidof CustomImageEx)
			kill $(pidof python)
			sleep 2
		;;
		6)
			echo "Stopping VectorNav Logger"
			kill $(pidof vn200_linux_binary_async)
			sleep 2
		;;
		
		# Displays
		7)
			echo "Displaying Lidar data"
			trap ctrlc2 INT
			tail -n 1 -f "${LIDARLOC}/lidar_data.csv"
		;;
		8)
			echo "Displaying Camera data"
			display_scripts/ImageViewer.py &
		;;
		9)
			echo "Displaying Lidar data"
			trap ctrlc2 INT
			tail -n 1 -f "${VNLOC}/vn.csv"
		;;
		
	esac
	
done
